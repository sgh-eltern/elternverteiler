#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../config/db'
require_relative '../config/que'
require 'sgh/elternverteiler/jobs/job'

include SGH::Elternverteiler

Job.distinct(:queue).select(:queue).map(&:queue).each do |queue|
  warn "#{queue}:"
  jobs = Job.by_queue(queue)

  %I(errored expired finished scheduled).each do |condition|
    puts "  #{condition}: #{jobs.send(condition).count}"
  end
end

#Job.dataset.destroy

__END__


Job.each do |job|
  if job.last_error_message.nil?
    warn "#{job.run_at}: #{job.job_class} - #{job.id}"
  else
    warn "#{job.run_at}: #{job.job_class} - #{job.error_count} errors. Last: #{job.last_error_message}"
    warn job.last_error_backtrace
    warn ''
  end
  # job.destroy
end

columns = Job.columns
warn columns.join("\t")

%I[not_ready ready finished].each do |ds|
  warn " "
  warn "# #{ds.to_s.upcase}"
  Job.send(ds).each do |j|
    columns.each do |column|
      print j.send(column)
      print "\t"
    end
    puts
  end
end
